#version 460

layout (local_size_x = 16, local_size_y = 16) in;
layout (rgba8, binding = 0) uniform image2D img_in;
layout (rgba8, binding = 1) uniform image2D img_out;

int colToCell(vec4 col) {
    if(col.x + col.y + col.z >= 1.5) {
        return 1;
    } else {
        return 0;
    }
}

vec4 cellToCol(int cell) {
    if(cell == 1) {
        return vec4(1.0, 1.0, 1.0, 1.0);
    } else {
        return vec4(0.0, 0.0, 0.0, 1.0);
    }
}

void main() {
    ivec2 pos = ivec2(gl_GlobalInvocationID.xy);
    // get the neighbours
    ivec2 poses[8] = {
        ivec2(pos.x - 1, pos.y - 1), ivec2(pos.x + 1, pos.y + 0),
        ivec2(pos.x + 0, pos.y - 1), ivec2(pos.x - 1, pos.y + 1),
        ivec2(pos.x + 1, pos.y - 1), ivec2(pos.x + 0, pos.y + 1),
        ivec2(pos.x - 1, pos.y + 0), ivec2(pos.x + 1, pos.y + 1)
    };
    int currentCell = colToCell(imageLoad(img_in, pos));
    int aliveNeighbourCount = 0;
    for(int i = 0; i < 8; i++) {
        aliveNeighbourCount += colToCell(imageLoad(img_in, poses[i]));
    }
    int outCell = currentCell == 1 ? (aliveNeighbourCount < 2 ? 0 : aliveNeighbourCount > 3 ? 0 : 1) : (aliveNeighbourCount == 3 ? 1 : 0);
    imageStore(img_out, pos, cellToCol(outCell));
    // imageStore(img_out, pos, posColor);
}
